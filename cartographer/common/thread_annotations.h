#ifndef CARTOGRAPHER_COMMON_THREAD_ANNOTATIONS_H_
#define CARTOGRAPHER_COMMON_THREAD_ANNOTATIONS_H_

#include "absl/base/thread_annotations.h"

// Compatibility macros for thread safety annotations.
// These provide the old-style macro names that map to the new Abseil prefixed versions.

#define GUARDED_BY(x) ABSL_GUARDED_BY(x)
#define PT_GUARDED_BY(x) ABSL_PT_GUARDED_BY(x)
#define ACQUIRED_AFTER(...) ABSL_ACQUIRED_AFTER(__VA_ARGS__)
#define ACQUIRED_BEFORE(...) ABSL_ACQUIRED_BEFORE(__VA_ARGS__)
#define EXCLUSIVE_LOCKS_REQUIRED(...) ABSL_EXCLUSIVE_LOCKS_REQUIRED(__VA_ARGS__)
#define SHARED_LOCKS_REQUIRED(...) ABSL_SHARED_LOCKS_REQUIRED(__VA_ARGS__)
#define LOCKS_EXCLUDED(...) ABSL_LOCKS_EXCLUDED(__VA_ARGS__)
#define LOCK_RETURNED(x) ABSL_LOCK_RETURNED(x)
#define LOCKABLE ABSL_LOCKABLE
#define SCOPED_LOCKABLE ABSL_SCOPED_LOCKABLE
#define EXCLUSIVE_LOCK_FUNCTION(...) ABSL_EXCLUSIVE_LOCK_FUNCTION(__VA_ARGS__)
#define SHARED_LOCK_FUNCTION(...) ABSL_SHARED_LOCK_FUNCTION(__VA_ARGS__)
#define UNLOCK_FUNCTION(...) ABSL_UNLOCK_FUNCTION(__VA_ARGS__)
#define EXCLUSIVE_TRYLOCK_FUNCTION(...) ABSL_EXCLUSIVE_TRYLOCK_FUNCTION(__VA_ARGS__)
#define SHARED_TRYLOCK_FUNCTION(...) ABSL_SHARED_TRYLOCK_FUNCTION(__VA_ARGS__)
#define ASSERT_EXCLUSIVE_LOCK(...) ABSL_ASSERT_EXCLUSIVE_LOCK(__VA_ARGS__)
#define ASSERT_SHARED_LOCK(...) ABSL_ASSERT_SHARED_LOCK(__VA_ARGS__)
#define NO_THREAD_SAFETY_ANALYSIS ABSL_NO_THREAD_SAFETY_ANALYSIS

#endif  // CARTOGRAPHER_COMMON_THREAD_ANNOTATIONS_H_